[config]
default_to_workspace = false
skip_core_tasks = true

[tasks.build]
script = '''
#!@duckscript

exec docker-compose -p kongying-tavern-backend -f ./tasks/compose.yml build
'''

[tasks.up]
script = '''
#!@duckscript

db_username = get_env DB_USERNAME
if is_empty ${db_username}
  echo "DB_USERNAME is not set"
  exit 1
end

db_password = get_env DB_PASSWORD
if is_empty ${db_password}
  echo "DB_PASSWORD is not set"
  exit 1
end

set_env DB_DATABASE "kongying-tavern-backend"

exec docker-compose -p kongying-tavern-backend -f ./tasks/compose.yml up --build -d
'''

[tasks.dev-on-container-reboot]
condition = { profiles = ["docker-inside"] }
script = '''
#!@duckscript

cd /home
while not is_path_exists /home/a
  echo "Waiting for build..."
  sleep 1000
end
exec /home/a
'''

[tasks.dev-on-container-build]
condition = { profiles = ["docker-inside"] }
script = '''
#!@duckscript

cd /home
if is_path_exists /home/target/Cargo.lock
  cp /home/target/Cargo.lock /home/Cargo.lock
end
exec cargo check
cp /home/Cargo.lock /home/target/Cargo.lock

cd /home
exec cargo build --package _router

cp /home/target/debug/_router /home/a

cd /home
exec /home/a
'''

[tasks.dev-preload]
env = { DB_USERNAME = "homo", DB_PASSWORD = "1145141919810", DB_DATABASE = "kongying-tavern-backend" }
script = '''
#!@duckscript

exec docker-compose -p kongying-tavern-backend -f ./tasks/compose.dev.yml up --build -d
'''

[tasks.dev]
dependencies = [{ name = "dev-preload" }]
watch = { postpone = true, no_git_ignore = true, ignore_pattern = "Cargo.lock", watch = [
  "./packages/",
] }
script = '''
#!@duckscript

exec docker-compose -p kongying-tavern-backend -f ./tasks/compose.dev.yml restart dynamic
'''
